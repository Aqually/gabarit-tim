<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Exercice 2 - Programmation d'animation II</title>
    <!-- Ajustement de la taille du viewport-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Désactivation du mode de compatibilité avec des versions antérieures pour IE-->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Importation du script pour la police d'icônes Awesome-->
    <script src="https://use.fontawesome.com/039279f0d1.js"></script>

    <!-- Importation des feuilles de styles-->

    <!-- Pour faciliter le debugage on utilise  des link pour mieux identifier les fichiers CSS en causes -->
    <link rel="stylesheet" href="css/styles.css">


</head>

<body>
    <main>
        <section>
            <article>
                <svg viewBox="0 0 10 10" class="svg-1">
                    <path d="
                        M2,5 A 5 25 0 0 1 8 8 Z"
                    />
                </svg>

            </article>
            <article>
                <svg viewBox="0 0 10 10" class="svg-2">
                  <path d="M2,8 L5,2 L8,8 Z" />
                </svg>
            </article>
            <article>
                <svg viewBox="0 0 10 10" class="svg-3">
                  <path d="M2,2 Q8,2 8,8 Z" />
                </svg>

            </article>
            <article>
                <svg viewBox="0 0 10 10" class="svg-4">
                  <path d="M2,5 C2,8 8,8 8,5 Z" />
                </svg>
            </article>
            <article>
                <svg viewBox="0 0 10 10" class="svg-5">
                  <path d="M2,2 L8,2 L2,5 L8,5 L2,8 L8,8 Z" />
                </svg>
            </article>
        </section>
    </main>
</body>

<script>
    // on cible l'élément « path » que l'on veut animer
    var triangle = document.getElementsByTagName("path");
    console.log(triangle);
    // la longueur du chemin «path»
    for (var i = 0; i < triangle.length; i++) {
        var longueur = triangle[i].getTotalLength();
        triangle[i].style.strokeDasharray = longueur;
        triangle[i].style.strokeDashoffset = longueur;
    }

    // extraire la fraction du déplacement de la barre de défilement et  ajusté le tracé
    window.addEventListener("scroll", maTrace);

    function maTrace() {
        console.log('scrollTop de body = ' + document.body.scrollTop)
        console.log('scrollTop de documentElement = ' + document.documentElement.scrollTop)
        console.log('scrollHeight de documentElement = ' + document.documentElement.scrollHeight)
        console.log('clientHeight de documentElement = ' + document.documentElement.clientHeight)
        https: //developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight
        for (var i = 0; i < triangle.length; i++) {
            var longueur = triangle[i].style.strokeDasharray
            var fractionDuScroll = (document.body.scrollTop + document.documentElement.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight);
            var trace = longueur * fractionDuScroll;
            // tracé selon la fraction de «scroll»
            triangle[i].style.strokeDashoffset = longueur - trace;
        }

    }
</script>

</html>
